// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  lastName       String?
  email          String?    @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           Role       @default(USER)
  shipping       Shipping[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String?  @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Shipping {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  line1     String
  line2     String
  postCode  String
  city      String
}

enum Role {
  USER
  ADMIN
}

model Product {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Int               @default(0)
  categoryID    String[]          @db.ObjectId
  category      ProductCategory[] @relation(fields: [categoryID], references: [id])
  stock         String?           @default("0")
  slug          String            @unique
  availability  String?           @default("Dostępny na zamówienie")
  timeToDeliver Int?              @default(3)
  description   String?
  weight        String?           @default("20")
  active        Boolean?          @default(true)
  images        Images[]          @relation(fields: [imagesID], references: [id])
  imagesID      String[]          @db.ObjectId
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Images {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  path      String?
  product   Product[] @relation(fields: [productId], references: [id])
  productId String[]  @db.ObjectId
}

model ProductCategory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  image     String?
  slug      String
  productId String[]  @db.ObjectId
  product   Product[] @relation(fields: [productId], references: [id])
}
